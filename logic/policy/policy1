#definition
define sort int class=edu.thu.ss.logic.example.IntSort
define sort column class=edu.thu.ss.logic.example.ColumnSort
define sort table class=edu.thu.ss.logic.example.TableSort
define sort nodetype class=edu.thu.ss.logic.example.NodeTypeSort
define sort operation class=edu.thu.ss.logic.example.OperationSort
define sort order class=edu.thu.ss.logic.example.OrderSort

define function int add(int z, int y) class=edu.thu.ss.logic.example.Add

define predicate isZero(int z) class=edu.thu.ss.logic.example.IsZero
define predicate equals(int z, int y) class=edu.thu.ss.logic.example.Equals
define predicate output(column c) class=edu.thu.ss.logic.example.Output
define predicate isAccessed(table t) class=edu.thu.ss.logic.example.isAccessed
define predicate isType(nodetype nt) class=edu.thu.ss.logic.example.isType
define predicate isFinal() class=edu.thu.ss.logic.example.isFinal
define predicate isProject(column c) class=edu.thu.ss.logic.example.isProject
define predicate orderBy(column c, order o) class=edu.thu.ss.logic.example.orderBy
define predicate groupBy(column c) class=edu.thu.ss.logic.example.groupBy
define predicate isAggregate(column c, operation op) class=edu.thu.ss.logic.example.isAggregate
define predicate isFilter(column c) class=edu.thu.ss.logic.example.isFilter
define predicate isUnion(table t1, table t2) class=edu.thu.ss.logic.example.isUnion
define predicate isJoin(table t1, table t2) class=edu.thu.ss.logic.example.isJoin

#policy
r3: G[0,10](AG (isFinal()->!isProject("address.state")))